/* Generated By:JJTree: Do not edit this line. Op1.java Version 7.0 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
import org.graphstream.graph.implementations.MultiGraph;
import faops.*;

public
class Op1 extends SimpleNode {
    public int op = -1;
    public String[] operations = {"multiply", "concatenate", "intersection", "union"};
  public Op1(int id) {
    super(id);
  }

  public Op1(FAOPS p, int id) {
    super(p, id);
  }

    public MultiGraph eval(MultiGraph leftGraph, MultiGraph rightGraph) {
        if (op == 0) {
            Multiply multiplier = new Multiply(leftGraph, rightGraph);
            return multiplier.getGraph();
        } else if (op == 1) {
            Concatenate concatenator = new Concatenate(leftGraph, rightGraph);
            return concatenator.getGraph();
        } else if (op == 2) {
            Intersection intersector = new Intersection(leftGraph, rightGraph);
            return intersector.getGraph();
        } else if (op == 3) {
            Union unitor = new Union(leftGraph, rightGraph);
            return unitor.getGraph();
        }

        return null;
    }

  public String toString() { return FAOPSTreeConstants.jjtNodeName[id] + " " + operations[op]; }

}
/* JavaCC - OriginalChecksum=ba6b37bffa95f3766b450265075b1532 (do not edit this line) */
